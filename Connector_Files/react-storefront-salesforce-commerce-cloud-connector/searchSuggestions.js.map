{"version":3,"sources":["../src/searchSuggestions.js"],"names":["get","getClient","normalizeProduct","searchSuggestions","q","req","res","length","text","groups","client","results","getSuggestions","categories","productSuggestions","products","getProducts","ids","map","s","productId","join","searchPhrase","caption","ui","links","id","name","href","as","data","url","thumbnail"],"mappings":"AAAA,OAAOA,GAAP,MAAgB,YAAhB;AACA,OAAOC,SAAP,MAAsB,gBAAtB;AACA,OAAOC,gBAAP,MAA6B,0BAA7B;AAEA,eAAe,eAAeC,iBAAf,CAAiCC,CAAjC,EAAoCC,GAApC,EAAyCC,GAAzC,EAA8C;AAC3D;AACA,MAAIF,CAAC,CAACG,MAAF,GAAW,CAAf,EAAkB;AAChB,WAAO;AACLC,MAAAA,IAAI,EAAEJ,CADD;AAELK,MAAAA,MAAM,EAAE;AAFH,KAAP;AAID;;AAED,QAAMC,MAAM,GAAG,MAAMT,SAAS,CAACI,GAAD,CAA9B;AAEA,QAAMM,OAAO,GAAG,MAAMD,MAAM,CAACE,cAAP,CAAsB;AAAER,IAAAA;AAAF,GAAtB,CAAtB;AAEA,QAAMS,UAAU,GAAGb,GAAG,CAACW,OAAD,EAAU,CAAC,qBAAD,EAAwB,YAAxB,CAAV,EAAiD,EAAjD,CAAtB;AACA,QAAMG,kBAAkB,GAAGd,GAAG,CAACW,OAAD,EAAU,CAAC,oBAAD,EAAuB,UAAvB,CAAV,EAA8C,EAA9C,CAA9B;AAEA,QAAMI,QAAQ,GAAG,MAAML,MAAM,CAACM,WAAP,CAAmB;AACxCC,IAAAA,GAAG,EAAEH,kBAAkB,CAACI,GAAnB,CAAuBC,CAAC,IAAIA,CAAC,CAACC,SAA9B,EAAyCC,IAAzC,CAA8C,GAA9C;AADmC,GAAnB,CAAvB;AAIA,SAAO;AACLb,IAAAA,IAAI,EAAEG,OAAO,CAACW,YADT;AAELb,IAAAA,MAAM,EAAE,CACN;AACEc,MAAAA,OAAO,EAAE,sBADX;AAEEC,MAAAA,EAAE,EAAE,MAFN;AAGEC,MAAAA,KAAK,EAAEZ,UAAU,CAACK,GAAX,CAAe,CAAC;AAAEQ,QAAAA,EAAF;AAAMC,QAAAA;AAAN,OAAD,KAAkB;AACtC,eAAO;AAAEnB,UAAAA,IAAI,EAAEmB,IAAR;AAAcC,UAAAA,IAAI,EAAE,oBAApB;AAA0CC,UAAAA,EAAE,EAAG,MAAKH,EAAG;AAAvD,SAAP;AACD,OAFM;AAHT,KADM,EAQN;AACEH,MAAAA,OAAO,EAAE,oBADX;AAEEC,MAAAA,EAAE,EAAE,YAFN;AAGEC,MAAAA,KAAK,EAAE,CAACV,QAAQ,CAACe,IAAT,IAAiB,EAAlB,EAAsBZ,GAAtB,CAA0BhB,gBAA1B,EAA4CgB,GAA5C,CAAgD,CAAC;AAAES,QAAAA,IAAF;AAAQI,QAAAA,GAAR;AAAaC,QAAAA;AAAb,OAAD,KAA8B;AACnF,eAAO;AAAExB,UAAAA,IAAI,EAAEmB,IAAR;AAAcC,UAAAA,IAAI,EAAE,gBAApB;AAAsCC,UAAAA,EAAE,EAAEE,GAA1C;AAA+CC,UAAAA;AAA/C,SAAP;AACD,OAFM;AAHT,KARM;AAFH,GAAP;AAmBD","sourcesContent":["import get from 'lodash/get'\nimport getClient from './utils/client'\nimport normalizeProduct from './utils/normalizeProduct'\n\nexport default async function searchSuggestions(q, req, res) {\n  // Query has a length constraint (3...50)\n  if (q.length < 3) {\n    return {\n      text: q,\n      groups: [],\n    }\n  }\n\n  const client = await getClient(req)\n\n  const results = await client.getSuggestions({ q })\n\n  const categories = get(results, ['categorySuggestions', 'categories'], [])\n  const productSuggestions = get(results, ['productSuggestions', 'products'], [])\n\n  const products = await client.getProducts({\n    ids: productSuggestions.map(s => s.productId).join(','),\n  })\n\n  return {\n    text: results.searchPhrase,\n    groups: [\n      {\n        caption: 'Suggested Categories',\n        ui: 'list',\n        links: categories.map(({ id, name }) => {\n          return { text: name, href: '/s/[subcategoryId]', as: `/s/${id}` }\n        }),\n      },\n      {\n        caption: 'Suggested Products',\n        ui: 'thumbnails',\n        links: (products.data || []).map(normalizeProduct).map(({ name, url, thumbnail }) => {\n          return { text: name, href: '/p/[productId]', as: url, thumbnail }\n        }),\n      },\n    ],\n  }\n}\n"],"file":"searchSuggestions.js"}