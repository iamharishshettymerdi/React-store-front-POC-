{"version":3,"sources":["../../src/utils/productListing.js"],"names":["getClient","normalizeProduct","limit","productListing","params","req","searchOptions","page","filters","sort","offset","client","search","findProducts","products","hits","getProducts","ids","map","p","productId","join","allImages","totalPages","Math","ceil","total","data","sortOptions","sortingOptions","label","id","name","code","JSON","parse","facets","refinements","filter","e","values","attributeId","options","hitCount","value","matches"],"mappings":"AAAA,OAAOA,SAAP,MAAsB,UAAtB;AACA,OAAOC,gBAAP,MAA6B,oBAA7B,C,CAEA;;AACA,MAAMC,KAAK,GAAG,EAAd;AAEA,eAAe,eAAeC,cAAf,CAA8BC,MAA9B,EAAsCC,GAAtC,EAA2CC,aAA3C,EAA0D;AACvE,QAAM;AAAEC,IAAAA,IAAI,GAAG,CAAT;AAAYC,IAAAA,OAAO,GAAG,IAAtB;AAA4BC,IAAAA;AAA5B,MAAqCL,MAA3C;AAEA,QAAMM,MAAM,GAAGR,KAAK,IAAIK,IAAI,GAAG,CAAX,CAApB;AAEA,QAAMI,MAAM,GAAG,MAAMX,SAAS,CAACK,GAAD,CAA9B;AACA,QAAMO,MAAM,GAAG,MAAMD,MAAM,CAACE,YAAP,CAAoB;AACvCJ,IAAAA,IADuC;AAEvCC,IAAAA,MAFuC;AAGvCR,IAAAA,KAHuC;AAIvC,OAAGI;AAJoC,GAApB,CAArB;AAOA,MAAIQ,QAAQ,GAAG,EAAf;;AAEA,MAAIF,MAAM,CAACG,IAAX,EAAiB;AACfD,IAAAA,QAAQ,GAAG,MAAMH,MAAM,CAACK,WAAP,CAAmB;AAClCC,MAAAA,GAAG,EAAEL,MAAM,CAACG,IAAP,CAAYG,GAAZ,CAAgBC,CAAC,IAAIA,CAAC,CAACC,SAAvB,EAAkCC,IAAlC,CAAuC,GAAvC,CAD6B;AAElCC,MAAAA,SAAS,EAAE;AAFuB,KAAnB,CAAjB;AAID;;AAED,QAAMC,UAAU,GAAGC,IAAI,CAACC,IAAL,CAAUb,MAAM,CAACc,KAAP,GAAexB,KAAzB,IAAkC,CAArD,CAtBuE,CAwBvE;;AACA,SAAO;AACLwB,IAAAA,KAAK,EAAEd,MAAM,CAACc,KADT;AAELnB,IAAAA,IAFK;AAGLgB,IAAAA,UAHK;AAIL;AACA;AACAT,IAAAA,QAAQ,EAAE,CAACA,QAAQ,CAACa,IAAT,IAAiB,EAAlB,EAAsBT,GAAtB,CAA0BjB,gBAA1B,CANL;AAOLQ,IAAAA,IAPK;AAQLmB,IAAAA,WAAW,EAAEhB,MAAM,CAACiB,cAAP,CAAsBX,GAAtB,CAA0B,CAAC;AAAEY,MAAAA,KAAF;AAASC,MAAAA;AAAT,KAAD,KAAmB;AACxD,aAAO;AACLC,QAAAA,IAAI,EAAEF,KADD;AAELG,QAAAA,IAAI,EAAEF;AAFD,OAAP;AAID,KALY,CARR;AAcLvB,IAAAA,OAAO,EAAE0B,IAAI,CAACC,KAAL,CAAW3B,OAAX,CAdJ;AAeL4B,IAAAA,MAAM,EAAE,CAACxB,MAAM,CAACyB,WAAP,IAAsB,EAAvB,EACLC,MADK,CACEC,CAAC,IAAIA,CAAC,CAACC,MADT,EAELtB,GAFK,CAED,CAAC;AAAEY,MAAAA,KAAF;AAASW,MAAAA,WAAT;AAAsBD,MAAAA;AAAtB,KAAD,KAAoC;AACvC,aAAO;AACLR,QAAAA,IAAI,EAAEF,KADD;AAELY,QAAAA,OAAO,EAAEF,MAAM,CAACtB,GAAP,CAAW,CAAC;AAAEyB,UAAAA,QAAF;AAAYb,UAAAA,KAAZ;AAAmBc,UAAAA;AAAnB,SAAD,KAAgC;AAClD,iBAAO;AACLZ,YAAAA,IAAI,EAAEF,KADD;AAELG,YAAAA,IAAI,EAAG,GAAEQ,WAAY,IAAGG,KAAM,EAFzB;AAGLC,YAAAA,OAAO,EAAEF;AAHJ,WAAP;AAKD,SANQ;AAFJ,OAAP;AAUD,KAbK;AAfH,GAAP;AA8BD","sourcesContent":["import getClient from './client'\nimport normalizeProduct from './normalizeProduct'\n\n// TODO: make process env var\nconst limit = 24\n\nexport default async function productListing(params, req, searchOptions) {\n  const { page = 1, filters = '[]', sort } = params\n\n  const offset = limit * (page - 1)\n\n  const client = await getClient(req)\n  const search = await client.findProducts({\n    sort,\n    offset,\n    limit,\n    ...searchOptions,\n  })\n\n  let products = []\n\n  if (search.hits) {\n    products = await client.getProducts({\n      ids: search.hits.map(p => p.productId).join(','),\n      allImages: true,\n    })\n  }\n\n  const totalPages = Math.ceil(search.total / limit) + 1\n\n  // collect all page data\n  return {\n    total: search.total,\n    page,\n    totalPages,\n    // isLanding,\n    // cmsBlocks,\n    products: (products.data || []).map(normalizeProduct),\n    sort,\n    sortOptions: search.sortingOptions.map(({ label, id }) => {\n      return {\n        name: label,\n        code: id,\n      }\n    }),\n    filters: JSON.parse(filters),\n    facets: (search.refinements || [])\n      .filter(e => e.values)\n      .map(({ label, attributeId, values }) => {\n        return {\n          name: label,\n          options: values.map(({ hitCount, label, value }) => {\n            return {\n              name: label,\n              code: `${attributeId}=${value}`,\n              matches: hitCount,\n            }\n          }),\n        }\n      }),\n  }\n}\n"],"file":"productListing.js"}